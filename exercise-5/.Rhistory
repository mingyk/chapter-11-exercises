# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
library("dplyr")
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
install.packages("nycflights13")  # should be done already
install.packages("nycflights13")
library("nycflights13")
nycflights13
View(nycfights13)
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
dep_delay_by_month <- read.csv("nycflights13")
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
dep_delay_by_month <- read.csv("airports")
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
dep_delay_by_month <- read.csv(airports)
library("nycflights13")
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
library("dplyr")
library("nycflights13")
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
View(airports)
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
View(airlines)
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
View(flights)
dep_delay_by_month <- flights %>% group_by(month) %>% summarize(mean(dep_delay))
dep_delay_by_month
dep_delay_by_month <- flights %>% summarize(mean(dep_delay))
dep_delay_by_month
dep_delay_by_month <- flights %>% group_by(month) %>% summarize(mean(dep_delay), na.rm = T)
dep_delay_by_month
flights_df <- read.csv(flights, stringsAsFactors = F)
flights_df <- read.csv("flights", stringsAsFactors = F)
flights_df <- flights
flights_df
dep_delay_by_month <- flights_df %>% group_by(month) %>% summarize(mean(dep_delay))
dep_delay_by_month
?summarize
flights_df %>% group_by(month)
dep_delay_by_month <- flights_df %>% group_by(month) %>% summarize(sum(dep_delay) / nrow())
dep_delay_by_month <- flights_df %>% group_by(month) %>% summarize(sum(dep_delay) / nrow(flights))
dep_delay_by_month
dep_delay_by_month <- flights_df %>% group_by(month) %>% summarize(sum(dep_delay))
dep_delay_by_month
flights_df <- as.data.frame(flights)
dep_delay_by_month <- flights_df %>% group_by(month) %>% summarize(mean(dep_delay))
dep_delay_by_month
?stringsAsFactors
?stringsAsFactors
??stringsAsFactors
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
library("dplyr")
dep_delay_by_month <- flights %>% group_by(month) %>% summarize(mean(dep_delay))
dep_delay_by_month
summary(flights)
?read()
df <- as.data.frame(flights, stringsAsFactors = F)
dep_delay_by_month <- df %>% group_by(month) %>% summarize(mean(dep_delay))
dep_delay_by_month
df
dep_delay_by_month <- df %>% group_by(month) %>% summarize(mean(dep_delay, na.rm = TRUE))
dep_delay_by_month
dep_delay_by_month <- flights %>% group_by(month) %>% summarize(mean(dep_delay, na.rm = TRUE))
dep_delay_by_month
dep_delay_by_month <- flights %>% group_by(month) %>% summarize(avg = mean(dep_delay, na.rm = TRUE))
dep_delay_by_month
# Which month had the greatest average departure delay?
dep_delay_by_month %>% summarize(max(avg))
# Which month had the greatest average departure delay?
dep_delay_by_month %>% filter(max(avg))
# Which month had the greatest average departure delay?
dep_delay_by_month %>% filter(avg = max(avg))
# Which month had the greatest average departure delay?
dep_delay_by_month %>% filter(avg == max(avg))
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# `plot()` function
plot(dep_delay_by_month)
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation then summarize your data
# You can use the `head()` function to view just the first few rows
df <- flights %>% group_by(dest) %>% summarize(avg = mean(dep_delay, na.rm = TRUE))
df
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation then summarize your data
# You can use the `head()` function to view just the first few rows
df <- flights %>% group_by(dest) %>% summarize(avg = mean(dep_delay, na.rm = TRUE)) %>% arrange(-avg)
source('~/Desktop/INFO201/Excercises/chapter-11-exercises/exercise-5/exercise.R', echo=TRUE)
df
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation then summarize your data
# You can use the `head()` function to view just the first few rows
flights %>% group_by(dest) %>% summarize(avg = mean(dep_delay, na.rm = TRUE)) %>% arrange(-avg) %>% head(3)
# You can look up these airports in the `airports` data frame!
airports %>% filter(faa == "CAE", "TUL, "OKC)
# You can look up these airports in the `airports` data frame!
airports %>% filter(faa == "CAE", "TUL, "OKC"")
# You can look up these airports in the `airports` data frame!
airports %>% filter(faa == "CAE", "TUL, "OKC")
# Which city was flown to with the highest average speed?
# You can look up these airports in the `airports` data frame!
airports %>% filter(faa == "CAE", "TUL", "OKC")
# You can look up these airports in the `airports` data frame!
airports %>% filter(faa == "CAE")
# Which city was flown to with the highest average speed?
flights %>% mutate(avg_speed = distance / air_time) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% mutate(avg_speed == distance / air_time) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% mutate(avg_speed == distance / air_time) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
flights %>% mutate(avg_speed == distance / air_time)
# Which city was flown to with the highest average speed?
flights %>% mutate(speed == distance / air_time) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% mutate(avg_speed == (distance / air_time) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% mutate(avg_speed == (distance / air_time)) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% mutate(avg_speed == (distance / air_time)) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% filter(distance / air_time = max(distance / air_time)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% filter((distance / air_time) = max(distance / air_time)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% filter((distance / air_time) == max(distance / air_time)) %>% select(dest)
flights %>% filter((distance / air_time) == max(distance / air_time))
flights %>% mutate(avg_speed == distance / air_time)
dfdf <- flights
# Which city was flown to with the highest average speed?
dfdf %>% mutate(avg_speed == distance / air_time) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
?mutate
# Which city was flown to with the highest average speed?
dfdf %>% summarize(avg_speed == distance / air_time) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
# Which city was flown to with the highest average speed?
dfdf %>% summarize(avg_speed = distance / air_time) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% summarize(avg_speed = distance / air_time) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
flights %>% summarize(avg_speed = distance / air_time)
# Which city was flown to with the highest average speed?
flights %>% summarize(avg_speed = distance / air_time, na.rm = TRUE) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% summarize(avg_speed = (distance / air_time), na.rm = TRUE) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
# Which city was flown to with the highest average speed?
flights %>% group_by(dest) %>% summarize(avg_speed = (distance / air_time), na.rm = TRUE) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
flights %>% group_by(dest)
flights %>% group_by(dest) %>% summarize(distance / air_time)
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
library("dplyr")
flights
# Create a dataframe of the average arrival delays for each _destination_, then
# use `left_join()` to join on the "airports" dataframe, which has the airport
# information
# Which airport had the largest average arrival delay?
df <- flights %>% group_by(dest) %>% summarize(mean(arr_delay))
df
# Create a dataframe of the average arrival delays for each _destination_, then
# use `left_join()` to join on the "airports" dataframe, which has the airport
# information
# Which airport had the largest average arrival delay?
df <- flights %>% group_by(dest) %>% summarize(mean(arr_delay), ma.rm = TRUE)
df
# Create a dataframe of the average arrival delays for each _destination_, then
# use `left_join()` to join on the "airports" dataframe, which has the airport
# information
# Which airport had the largest average arrival delay?
df <- flights %>% group_by(dest) %>% summarize(mean(arr_delay), na.rm = TRUE)
df
# Create a dataframe of the average arrival delays for each _destination_, then
# use `left_join()` to join on the "airports" dataframe, which has the airport
# information
# Which airport had the largest average arrival delay?
df <- flights %>% group_by(dest) %>% summarize(avg = mean(arr_delay), na.rm = TRUE)
df
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
library("dplyr")
# Which city was flown to with the highest average speed?
flights %>% group_by(dest) %>% summarize(distance / air_time) %>% filter(avg_speed = max(avg_speed)) %>% select(dest)
